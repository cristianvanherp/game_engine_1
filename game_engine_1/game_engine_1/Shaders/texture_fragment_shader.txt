#version 330 core

out vec4 FragColor;

in vec2 texCoord;
in vec3 normal;
in vec3 fragPos;
in vec3 color;

uniform sampler2D tex;
uniform float ambient_lighting;
uniform vec3 lightPos;
uniform vec3 lightColor;

void main() {
	vec3 ambientLightColor = vec3(1.0, 1.0, 1.0);
	vec3 norm = normalize(normal);
	vec3 lightDir = normalize(lightPos - fragPos);
	float diff = max(dot(norm, lightDir), 0.0);
	
	vec3 diffuse = diff * lightColor;

	vec3 ambient = ambient_lighting * ambientLightColor;
	vec4 result;

	if(color == vec3(0.0, 0.0, 0.0)) {
		result = vec4((ambient + diffuse), 1.0) * texture(tex, vec2(texCoord.s, texCoord.t));
	}
	else {
		result = vec4((ambient + diffuse), 1.0) * vec4(color.xyz, 1.0);
	}
		
	FragColor = result;
}